apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      field.cattle.io/description: redis server
    creationTimestamp: "2022-12-16T05:38:30Z"
    generation: 8
    labels:
      workload.user.cattle.io/workloadselector: apps.deployment-redis-redis
    name: redis
    namespace: redis
    resourceVersion: "12500304"
    uid: 2fa7427e-e68c-473c-b476-fa49374de547
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: apps.deployment-redis-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cattle.io/timestamp: "2022-12-28T09:40:42Z"
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: apps.deployment-redis-redis
      spec:
        affinity: {}
        containers:
        - args:
          - redis-server
          - /etc/redis/redis.conf
          image: redis:6.2.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: container-0
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 1m
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: vol-redis-data
          - mountPath: /etc/redis/redis.conf
            name: vol-indgl
            subPath: redis.conf
          workingDir: /data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: vol-redis-data
          persistentVolumeClaim:
            claimName: pvc-redis
        - configMap:
            defaultMode: 420
            name: redis-conf
          name: vol-indgl
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-01-06T07:32:07Z"
      lastUpdateTime: "2023-01-06T07:32:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-12-16T05:38:30Z"
      lastUpdateTime: "2023-02-10T01:08:21Z"
      message: ReplicaSet "redis-99fbb5db4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
